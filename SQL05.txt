


1)
SELECT s.FIRST_NAME,s.LAST_NAME, s.PHONE
FROM STUDENT s INNER JOIN ZIPCODE z
ON s.ZIP = z.ZIP
WHERE z.STATE = 'NJ' AND z.CITY='Newark'
ORDER BY s.LAST_NAME,s.FIRST_NAME;

2)
SELECT MAX(s.NUMERIC_GRADE) AS NUMERIC_FINAL_GRADE 
FROM GRADE s INNER JOIN SECTION z
ON s.SECTION_ID = z.SECTION_ID
WHERE COURSE_NO = 145 AND s.GRADE_TYPE_CODE = 'FI'
GROUP BY s.GRADE_TYPE_CODE;

3)
SELECT s.COURSE_NO, s.DESCRIPTION , s.COST
FROM COURSE s, SECTION z, INSTRUCTOR w
WHERE z.COURSE_NO = s.COURSE_NO AND z.INSTRUCTOR_ID = w.INSTRUCTOR_ID
AND w.FIRST_NAME = 'Tom' and w.LAST_NAME='Wojick'
ORDER BY s.COURSE_NO;

4)
SELECT s.GRADE_TYPE_CODE, s.DESCRIPTION, e.NUMBER_PER_SECTION
FROM GRADE_TYPE s, GRADE_TYPE_WEIGHT e, SECTION z 
WHERE e.GRADE_TYPE_CODE = s.GRADE_TYPE_CODE AND e.SECTION_ID = z.SECTION_ID
AND z.COURSE_NO = 144
ORDER BY s.DESCRIPTION;

5)
SELECT s.LAST_NAME ||' '|| s.FIRST_NAME AS STUDENT_NAME
FROM STUDENT s , GRADE z
WHERE s.STUDENT_ID = z.STUDENT_ID
GROUP BY s.FIRST_NAME, s.LAST_NAME
HAVING AVG(z.NUMERIC_GRADE) > 93
ORDER BY s.LAST_NAME;

6)
SELECT s.FIRST_NAME,s.LAST_NAME,s.STREET_ADDRESS,z.CITY, z.STATE, z.ZIP
FROM INSTRUCTOR s , ZIPCODE z, SECTION w
WHERE s.ZIP = z.ZIP AND s.INSTRUCTOR_ID = w.INSTRUCTOR_ID
GROUP BY s.FIRST_NAME,s.LAST_NAME,s.STREET_ADDRESS,z.CITY, z.STATE, z.ZIP
HAVING COUNT(w.COURSE_NO) < 10;

7)
SELECT z.COURSE_NO, COUNT(s.ENROLL_DATE) AS ENROLLED
FROM SECTION z, ENROLLMENT s, COURSE w
WHERE z.SECTION_ID = s.SECTION_ID AND z.COURSE_NO = w.COURSE_NO
AND w.PREREQUISITE IS NULL
GROUP BY z.COURSE_NO
ORDER BY ENROLLED DESC;


8) who enrolled prior to 10:20am on February 2, 2007

SELECT DISTINCT s.FIRST_NAME,s.LAST_NAME, s.PHONE
FROM STUDENT s , ENROLLMENT e , ZIPCODE z
WHERE s.ZIP = z.ZIP AND s.STUDENT_ID = e.STUDENT_ID
AND z.CITY = 'Flushing' and z.STATE='NY'
AND (TO_DATE(e.ENROLL_DATE, 'DD/MM/YYYY HH:MI AM') < TO_DATE('02/02/2007 10:20 AM', 'DD/MM/YYYY HH:MI AM'))
ORDER BY s.LAST_NAME;

9)
SELECT z.COURSE_NO
FROM GRADE_TYPE s, GRADE_TYPE_WEIGHT e, SECTION z 
WHERE e.GRADE_TYPE_CODE = s.GRADE_TYPE_CODE AND e.SECTION_ID = z.SECTION_ID
AND s.DESCRIPTION = 'Project'
ORDER BY z.COURSE_NO;

10)
SELECT s1.COURSE_NO,s1.PREREQUISITE,s2.DESCRIPTION
FROM COURSE s1 JOIN COURSE s2
ON s1.PREREQUISITE = s2.COURSE_NO
WHERE s1.COURSE_NO BETWEEN 300 AND 399
AND s1.PREREQUISITE IS NOT NULL
ORDER BY s1.COURSE_NO;