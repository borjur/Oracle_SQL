



1)   highest most fewest average
SELECT z.STUDENT_ID
FROM SECTION s, ENROLLMENT z
WHERE s.SECTION_ID = z.SECTION_ID
AND s.COURSE_NO between 100 AND 199
GROUP BY z.STUDENT_ID
HAVING COUNT(*) = 
(SELECT MAX(SUM_ENROLLED)
FROM
(SELECT z.STUDENT_ID,COUNT(*) AS SUM_ENROLLED
FROM SECTION s, ENROLLMENT z
WHERE s.SECTION_ID = z.SECTION_ID
AND s.COURSE_NO between 100 AND 199
GROUP BY z.STUDENT_ID
ORDER BY COUNT(*)));


2)

select student_id,last_name, first_name
  from ( select s.student_id
              , w.last_name
              , w.first_name
              , s.numeric_grade
              , max(s.numeric_grade) over () as numeric_final_grade
           from grade s
           join section z
             on s.section_id = z.section_id
           join student w
             on s.student_id = w.student_id
          where z.course_no = 230 
            and z.section_id = 100 
            and s.grade_type_code = 'FI'
                )
 where numeric_grade = numeric_final_grade;

3) those that never have

SELECT a.SALUTATION, a.FIRST_NAME, a.LAST_NAME,a.ZIP
FROM INSTRUCTOR a 
WHERE a.INSTRUCTOR_ID NOT IN
(SELECT w.INSTRUCTOR_ID 
FROM SECTION w)
ORDER BY a.SALUTATION, a.FIRST_NAME, a.LAST_NAME,a.ZIP;

4) 

SELECT s.LAST_NAME , AVG(g.NUMERIC_GRADE) AS NUMERIC_GRADE
FROM GRADE g
JOIN STUDENT s ON g.STUDENT_ID = s.STUDENT_ID 
WHERE g.SECTION_ID = 90 AND g.GRADE_TYPE_CODE = 'FI'
GROUP BY s.LAST_NAME
HAVING AVG(g.NUMERIC_GRADE) >
   (SELECT AVG(NUMERIC_GRADE)
      FROM 
        (
        SELECT AVG(g.NUMERIC_GRADE) AS NUMERIC_GRADE 
        FROM GRADE g
        JOIN STUDENT s ON s.STUDENT_ID = g.STUDENT_ID
        WHERE g.SECTION_ID = 90 AND g.GRADE_TYPE_CODE = 'FI'
        GROUP BY s.LAST_NAME
      )
   )
ORDER BY s.LAST_NAME;

5) 
SELECT w.COURSE_NO, w.DESCRIPTION
FROM COURSE w, SECTION s, ENROLLMENT z
WHERE w.COURSE_NO = s.COURSE_NO AND s.SECTION_ID = z.SECTION_ID
GROUP BY w.COURSE_NO, w.DESCRIPTION 
HAVING COUNT(*)   = 
(SELECT MAX(ENROLLED)
FROM
(SELECT w.COURSE_NO, w.DESCRIPTION, COUNT(z.ENROLL_DATE) AS ENROLLED
FROM COURSE w, SECTION s, ENROLLMENT z
WHERE w.COURSE_NO = s.COURSE_NO AND s.SECTION_ID = z.SECTION_ID
GROUP BY w.COURSE_NO, w.DESCRIPTION)) ; 

6)
SELECT s.COURSE_NO, w.DESCRIPTION
FROM COURSE w, SECTION s
WHERE w.COURSE_NO = s.COURSE_NO
AND TO_CHAR(s.START_DATE_TIME, 'HH24:MI:SS') = '10:30:00'
AND EXISTS
(SELECT s.COURSE_NO
FROM SECTION s
WHERE TO_CHAR(s.START_DATE_TIME, 'HH24:MI:SS') = '10:30:00')
ORDER BY s.COURSE_NO;


7) 

SELECT s.STUDENT_ID, s.LAST_NAME 
FROM STUDENT s
JOIN GRADE g ON g.STUDENT_ID = s.STUDENT_ID
WHERE g.SECTION_ID = 135 AND g.GRADE_TYPE_CODE = 'QZ' AND g.GRADE_CODE_OCCURRENCE = 3
GROUP BY s.STUDENT_ID,s.LAST_NAME 
HAVING AVG(g.NUMERIC_GRADE) <
(SELECT AVG(NUMERIC_GRADE)
FROM (
SELECT AVG(g.NUMERIC_GRADE) AS NUMERIC_GRADE 
  FROM STUDENT s
    JOIN GRADE g ON g.STUDENT_ID = s.STUDENT_ID
  WHERE g.SECTION_ID = 135 
    AND g.GRADE_TYPE_CODE = 'QZ' 
    AND g.GRADE_CODE_OCCURRENCE = 3
    GROUP BY s.LAST_NAME
    )
    )
ORDER BY s.LAST_NAME;




8) 
SELECT FIRST_NAME, LAST_NAME, PHONE
FROM STUDENT d,ENROLLMENT f,SECTION g,COURSE h
WHERE d.STUDENT_ID = f.STUDENT_ID AND f.SECTION_ID = g.SECTION_ID AND g.COURSE_NO = h.COURSE_NO 
AND h.DESCRIPTION = 'Systems Analysis' 
INTERSECT
SELECT FIRST_NAME, LAST_NAME, PHONE
FROM STUDENT d,ENROLLMENT f,SECTION g,COURSE h
WHERE d.STUDENT_ID = f.STUDENT_ID AND f.SECTION_ID = g.SECTION_ID AND g.COURSE_NO = h.COURSE_NO 
AND h.DESCRIPTION = 'Project Management';



9) 
WITH q AS (
SELECT z.FIRST_NAME,z.LAST_NAME,b.COURSE_NO, MAX(b.DESCRIPTION) AS DESCRIPTION
     , COUNT(*) OVER (PARTITION BY z.FIRST_NAME, z.LAST_NAME) TheCount
  FROM INSTRUCTOR z
       JOIN SECTION w ON z.INSTRUCTOR_ID = w.INSTRUCTOR_ID
       JOIN COURSE b ON w.COURSE_NO = b.COURSE_NO
 WHERE UPPER(DESCRIPTION) like '%JAVA%'
 GROUP BY z.FIRST_NAME,z.LAST_NAME,b.COURSE_NO
)
SELECT first_name, last_name, course_no, description
  FROM q
 WHERE TheCount = (SELECT MAX(TheCount) FROM q)
 ORDER BY first_name,last_name,description;

10) 
SELECT DISTINCT s.STUDENT_ID , s.LAST_NAME, ROUND(AVG(g.NUMERIC_GRADE),2) AS FINAL_GRADE
FROM STUDENT s ,GRADE g
WHERE s.STUDENT_ID = g.STUDENT_ID
AND g.SECTION_ID = 143
GROUP BY s.STUDENT_ID , s.LAST_NAME ;












